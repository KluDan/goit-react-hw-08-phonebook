{"version":3,"file":"static/js/422.59ba1696.chunk.js","mappings":"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","sources":["components/FormBtn/FormBtn.styled.js","components/FormBtn/FormBtn.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/PhonebookForm/PhonebookForm.styled.js","components/EditForm/EditForm.styled.js","components/PhonebookForm/PhonebookForm.js","components/FilterByName/Filter.styled.js","components/FilterByName/Filter.js","components/PhonebookPage/PhonebookPage.styled.js","components/EditForm/EditForm.js","components/Loader.js","components/PhonebookPage/PhonebookPage.js","pages/Phonebook.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  font-size: 24px;\n  font-weight: 600;\n  width: 100%;\n  padding: 12px 20px;\n  outline: none;\n  border: none;\n  border-radius: 15px;\n  background-color: #d4ae7a;\n  color: #000;\n  text-transform: uppercase;\n`;\n","import { Button } from './FormBtn.styled';\n\nexport const FormBtn = ({ name }) => {\n  return <Button>{name}</Button>;\n};\n","import styled from 'styled-components';\n\nexport const ListItemBlock = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  button {\n    background-color: transparent;\n    border: none;\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\nexport const ListContact = styled.div`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-right: auto;\n  :first-child {\n    font-size: 24px;\n    font-weight: 600;\n  }\n`;\nexport const ListImg = styled.div`\n  font-size: 26px;\n  letter-spacing: 2px;\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  background-color: #cdcbc7;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FaTrash, FaEdit } from 'react-icons/fa';\nimport { ListContact, ListImg, ListItemBlock } from './ContactsListItem.styled';\nimport { deleteContact } from '../../redux/operations';\n\nexport const ContactsListItem = ({ contact, onEditClick }) => {\n  const dispatch = useDispatch();\n\n  const handleEditClick = () => {\n    onEditClick(contact);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const firstLetters = contact.name\n    .split(' ')\n    .map(namePart => namePart[0])\n    .join('');\n\n  return (\n    <ListItemBlock>\n      <ListImg>{firstLetters}</ListImg>\n      <ListContact>\n        <p>{contact.name}</p>\n        <p>{contact.number}</p>\n      </ListContact>\n\n      <button onClick={() => handleDelete(contact.id)}>\n        <FaTrash />\n      </button>\n\n      <button onClick={handleEditClick}>\n        <FaEdit />\n      </button>\n    </ListItemBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  list-style: none;\n  padding: 20px 40px;\n`;\nexport const ListItem = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactsListItem } from 'components/ContactsListItem/ContactsListItem';\nimport { List, ListItem } from './ContactsList.styled';\nimport { selectFilteredContacts } from '../../redux/phonebookSlice';\n\nexport const ContactsList = ({ onEditClick }) => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const sortedContacts = filteredContacts.slice().sort((a, b) => {\n    const nameA = a.name.toLowerCase();\n    const nameB = b.name.toLowerCase();\n    return nameA.localeCompare(nameB);\n  });\n\n  return (\n    <List>\n      {sortedContacts.map(contact => (\n        <ListItem key={contact.id}>\n          <ContactsListItem contact={contact} onEditClick={onEditClick} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 400px;\n  padding: 50px 30px 30px;\n  border-radius: 10px;\n  display: flex;\n  gap: 40px;\n  flex-direction: column;\n  background: rgba(182, 145, 119, 0.6);\n  position: relative;\n`;\n\nexport const InputField = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  position: relative;\n`;\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding: 15px 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 24px;\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ErrorStyled = styled(ErrorMessage)`\n  position: absolute;\n  top: 100%;\n  left: 12%;\n  color: red;\n  margin-top: 2px;\n  font-size: 18px;\n`;\nexport const FormLabel = styled.label`\n  display: block;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nexport const StyledForm = styled(Form)`\n  width: 400px;\n  padding: 50px 30px 30px;\n  border-radius: 10px;\n  display: flex;\n  gap: 40px;\n  flex-direction: column;\n  background: rgba(182, 145, 119, 0.6);\n  position: relative;\n`;\n\nexport const InputField = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  position: relative;\n`;\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding: 15px 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 24px;\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ErrorStyled = styled(ErrorMessage)`\n  position: absolute;\n  top: 100%;\n  left: 12%;\n  color: red;\n  margin-top: 2px;\n  font-size: 18px;\n`;\nexport const FormLabel = styled.label`\n  display: block;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const CloseBtn = styled(AiOutlineCloseCircle)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 5px;\n  background-color: transparent;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n`;\n","import { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { FaUser, FaPhone } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  FormLabel,\n  StyledField,\n  StyledForm,\n  ErrorStyled,\n  InputField,\n} from './PhonebookForm.styled';\nimport { addContact } from '../../redux/operations';\nimport { FormBtn } from 'components/FormBtn/FormBtn';\nimport { CloseBtn } from 'components/EditForm/EditForm.styled';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst Schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .required('It is a required field!')\n    .matches(nameRegExp, 'Name is not valid'),\n});\n\nexport const PhonebookForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [inputNumber, setInputNumber] = useState('');\n\n  const handleNumberChange = event => {\n    const inputValue = event.target.value;\n    const numericValue = inputValue.replace(/[^0-9]/g, '');\n\n    let formattedNumber = numericValue;\n\n    if (numericValue.length >= 4 && numericValue.charAt(3) !== '-') {\n      formattedNumber = numericValue.slice(0, 3) + '-' + numericValue.slice(3);\n    }\n    if (numericValue.length >= 7 && numericValue.charAt(6) !== '-') {\n      formattedNumber =\n        formattedNumber.slice(0, 7) + '-' + formattedNumber.slice(7);\n    }\n\n    if (formattedNumber.length > 12) {\n      formattedNumber = formattedNumber.slice(0, 12);\n    }\n\n    setInputNumber(formattedNumber);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    await dispatch(addContact({ ...values, number: inputNumber }));\n    resetForm();\n    setInputNumber('');\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <CloseBtn onClick={onClose} />\n          <InputField>\n            <FormLabel htmlFor=\"name\">\n              <FaUser />\n            </FormLabel>\n            <StyledField\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              title=\"Name may contain only letters, apostrophe, dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorStyled name=\"name\" component=\"div\" />\n          </InputField>\n\n          <InputField>\n            <FormLabel htmlFor=\"number\">\n              <FaPhone />\n            </FormLabel>\n            <StyledField\n              id=\"number\"\n              name=\"number\"\n              type=\"tel\"\n              placeholder=\"Phone Number\"\n              title=\"Phone number must be digits\"\n              value={inputNumber}\n              onChange={handleNumberChange}\n              required\n            />\n          </InputField>\n\n          <ErrorStyled name=\"number\" component=\"div\" />\n          <FormBtn type=\"submit\" name=\"add contact\" />\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  background-color: #b39b86;\n  padding: 30px 40px;\n  input {\n    font-size: 24px;\n    width: 100%;\n    padding: 10px 10px 10px 35px;\n    border: 1px solid #d4ae7a;\n    border-radius: 10px;\n    position: relative;\n    &:focus {\n      outline: none;\n    }\n  }\n  svg {\n    width: 25px;\n    height: 25px;\n    position: absolute;\n    top: 50%;\n    left: 10%;\n    transform: translateY(-50%);\n    z-index: 20;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { FilterStyled} from './Filter.styled';\nimport { setFilter } from '../../redux/phonebookSlice';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.phonebook.filter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const newFilter = e.target.value;\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <>\n      <FilterStyled>\n        <AiOutlineSearch />\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={handleChange}\n          placeholder=\"Find contact\"\n        />\n      </FilterStyled>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n  padding-inline: 20px;\n  display: flex;\n  height: 93vh;\n  overflow: hidden;\n`;\n\nexport const Contacts = styled.div`\n  flex: 0 1 40%;\n  background-color: rgba(153, 121, 94, 0.7);\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  overflow-y: auto;\n  position: relative;\n`;\nexport const ContentSide = styled.div`\n  flex: 0 1 60%;\n  position: relative;\n`;\nexport const FormBlock = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const BgImg = styled.img`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  opacity: 50%;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 50px;\n`;\nexport const AddNewContact = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n  p {\n    font-size: 26px;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { FaUser, FaPhone } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  FormLabel,\n  StyledField,\n  StyledForm,\n  ErrorStyled,\n  InputField,\n  CloseBtn,\n} from './EditForm.styled';\nimport { editContact } from '../../redux/operations';\n\nimport { FormBtn } from 'components/FormBtn/FormBtn';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst Schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .required('It is a required field!')\n    .matches(nameRegExp, 'Name is not valid'),\n});\n\nexport const EditForm = ({ contactId, contactData, onClose }) => {\n  const dispatch = useDispatch();\n  const [inputNumber, setInputNumber] = useState(contactData.number || '');\n\n  const handleNumberChange = event => {\n    const inputValue = event.target.value;\n    const numericValue = inputValue.replace(/[^0-9]/g, '');\n\n    let formattedNumber = numericValue;\n\n    if (numericValue.length >= 4 && numericValue.charAt(3) !== '-') {\n      formattedNumber = numericValue.slice(0, 3) + '-' + numericValue.slice(3);\n    }\n    if (numericValue.length >= 7 && numericValue.charAt(6) !== '-') {\n      formattedNumber =\n        formattedNumber.slice(0, 7) + '-' + formattedNumber.slice(7);\n    }\n\n    if (formattedNumber.length > 12) {\n      formattedNumber = formattedNumber.slice(0, 12);\n    }\n\n    setInputNumber(formattedNumber);\n  };\n\n  const handleSubmit = async values => {\n    await dispatch(\n      editContact({ id: contactId, ...values, number: inputNumber })\n    );\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: contactData.name || '',\n          number: contactData.number || '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <CloseBtn onClick={onClose} />\n\n          <InputField>\n            <FormLabel htmlFor=\"name\">\n              <FaUser />\n            </FormLabel>\n            <StyledField\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              title=\"Name may contain only letters, apostrophe, dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorStyled name=\"name\" component=\"div\" />\n          </InputField>\n\n          <InputField>\n            <FormLabel htmlFor=\"number\">\n              <FaPhone />\n            </FormLabel>\n            <StyledField\n              id=\"number\"\n              name=\"number\"\n              type=\"tel\"\n              placeholder=\"Phone Number\"\n              title=\"Phone number must be digits\"\n              value={inputNumber}\n              onChange={handleNumberChange}\n              required\n            />\n          </InputField>\n\n          <ErrorStyled name=\"number\" component=\"div\" />\n          <FormBtn type=\"submit\" name=\"Edit\" />\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import React from 'react';\nimport { LineWave } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <LineWave\n        height=\"70\"\n        width=\"100\"\n        color=\"#090a09\"\n        ariaLabel=\"line-wave\"\n        wrapperStyle={{\n          padding: '0',\n          marginLeft: '100px',\n        }}\n        wrapperClass=\"\"\n        visible={true}\n        firstLineColor=\"\"\n        middleLineColor=\"\"\n        lastLineColor=\"\"\n      />\n    </div>\n  );\n};\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { selectError, selectIsLoading } from 'redux/phonebookSlice';\n\nimport { useSelector } from 'react-redux';\nimport { Filter } from 'components/FilterByName/Filter';\nimport {\n  Wrapper,\n  Contacts,\n  ContentSide,\n  BgImg,\n  Title,\n  AddNewContact,\n  FormBlock,\n} from './PhonebookPage.styled';\nimport PhonebookImg from '../../assets/images/PhonebookImg.jpg';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { useState } from 'react';\nimport { Loader } from 'components/Loader';\n\nexport const PhonebookPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingContact, setEditingContact] = useState(null);\n  const [isEditingForm, setIsEditingForm] = useState(false);\n  const [isPhonebookForm, setIsPhonebookForm] = useState(false);\n\n  const handleEditClick = contact => {\n    setIsEditing(true);\n    setEditingContact(contact);\n    setIsEditingForm(true);\n    setIsPhonebookForm(false);\n  };\n  const handleContactClick = contact => {\n    if (isEditing) {\n      setEditingContact(contact);\n    } else {\n      handleEditClick(contact);\n    }\n  };\n\n  const handleAddContactClick = () => {\n    setIsPhonebookForm(true);\n    setIsEditingForm(false);\n  };\n\n  const handleFormClose = () => {\n    setIsEditing(false);\n    setEditingContact(null);\n    setIsEditingForm(false);\n    setIsPhonebookForm(false);\n  };\n\n  const renderForm = () => {\n    if (isPhonebookForm) {\n      return (\n        <>\n          <Title>Create contact</Title>\n          <PhonebookForm onClose={handleFormClose} />\n        </>\n      );\n    }\n\n    if (isEditingForm && editingContact !== null) {\n      return (\n        <>\n          <Title>Update contact</Title>\n          <EditForm\n            contactId={editingContact.id}\n            contactData={editingContact}\n            onClose={handleFormClose}\n          />\n        </>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <Wrapper>\n      <Contacts>\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <AddNewContact>\n          <AiOutlineUserAdd />\n          <p onClick={handleAddContactClick}>Add new contact</p>\n        </AddNewContact>\n        <ContactsList\n          onEditClick={handleEditClick}\n          onContactClick={handleContactClick}\n        />\n      </Contacts>\n      <ContentSide>\n        <BgImg src={PhonebookImg} alt=\"Work table\" />\n        <FormBlock>{renderForm()}</FormBlock>\n      </ContentSide>\n    </Wrapper>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/operations';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { PhonebookPage } from 'components/PhonebookPage/PhonebookPage';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <PhonebookPage />\n    </HelmetProvider>\n  );\n}\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","FormBtn","_ref","name","_jsx","children","ListItemBlock","ListContact","_templateObject2","ListImg","_templateObject3","ContactsListItem","contact","onEditClick","dispatch","useDispatch","firstLetters","split","map","namePart","join","_jsxs","number","onClick","id","deleteContact","FaTrash","FaEdit","List","ListItem","ContactsList","sortedContacts","useSelector","selectFilteredContacts","slice","sort","a","b","nameA","toLowerCase","nameB","localeCompare","StyledForm","Form","InputField","StyledField","Field","ErrorStyled","ErrorMessage","_templateObject4","FormLabel","_templateObject5","CloseBtn","AiOutlineCloseCircle","_templateObject6","Schema","Yup","shape","min","required","matches","PhonebookForm","onClose","_useState","useState","_useState2","_slicedToArray","inputNumber","setInputNumber","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","resetForm","wrap","_context","prev","next","addContact","_objectSpread","stop","_x","_x2","apply","arguments","_Fragment","Formik","initialValues","validationSchema","onSubmit","htmlFor","FaUser","type","placeholder","title","component","FaPhone","value","onChange","event","numericValue","target","replace","formattedNumber","length","charAt","FilterStyled","Filter","filter","state","phonebook","AiOutlineSearch","e","newFilter","setFilter","Wrapper","Contacts","ContentSide","FormBlock","BgImg","Title","AddNewContact","_templateObject7","EditForm","contactId","contactData","editContact","Loader","LineWave","height","width","color","ariaLabel","wrapperStyle","padding","marginLeft","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","PhonebookPage","isLoading","selectIsLoading","error","selectError","isEditing","setIsEditing","_useState3","_useState4","editingContact","setEditingContact","_useState5","_useState6","isEditingForm","setIsEditingForm","_useState7","_useState8","isPhonebookForm","setIsPhonebookForm","handleEditClick","handleFormClose","AiOutlineUserAdd","onContactClick","src","PhonebookImg","alt","Phonebook","useEffect","fetchContacts","HelmetProvider","Helmet"],"sourceRoot":""}