{"version":3,"file":"static/js/360.02681826.chunk.js","mappings":"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","sources":["components/FormBtn/FormBtn.styled.js","components/FormBtn/FormBtn.js","components/FormInput/FormInput.styled.js","components/FormInput/FormInput.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  font-size: clamp(1rem, 0.3rem + 2vw, 1.5rem);\n  font-weight: 600;\n  width: 100%;\n  padding: 12px 20px;\n  outline: none;\n  border: none;\n  border-radius: 15px;\n  background-color: #d4ae7a;\n  color: #000;\n  text-transform: uppercase;\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-width: 300px;\n    margin: 20px auto;\n  }\n`;\n","import { Button } from './FormBtn.styled';\n\nexport const FormBtn = ({ name }) => {\n  return <Button>{name}</Button>;\n};\n","import styled from 'styled-components';\n\nexport const InputBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  text-align: left;\n`;\n\nexport const Input = styled.input`\n  font-size: 24px;\n  width: 100%;\n  padding: 12px 45px 12px 15px;\n  border: 1px solid rgb(117, 117, 117);\n  border-radius: 10px;\n  outline: none;\n  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    background: rgb(236, 239, 241);\n  }\n  &:focus {\n    background-color: #fff;\n    border: 1px solid #d4ae7a;\n  }\n`;\n\nexport const Label = styled.label`\n  cursor: pointer;\n  text-transform: capitalize;\n  color: #d4ae7a;\n  font-size: 20px;\n`;\n\nexport const InputField = styled.div`\n  position: relative;\n  margin-bottom: clamp(1rem, 0.3rem + 3vw, 2.5rem);\n`;\nexport const EyeBtn = styled.button`\n  border: none;\n  outline: none;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: inherit;\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%);\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  Input,\n  Label,\n  InputBlock,\n  InputField,\n  EyeBtn,\n} from './FormInput.styled';\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\n\nexport const FormInput = ({ name, type }) => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n\n  return (\n    <InputBlock>\n      <Label htmlFor={name}>{name}</Label>\n      <InputField>\n        <Input name={name} id={name} type={isPasswordVisible ? 'text' : type} />\n        {type === 'password' && (\n          <EyeBtn type=\"button\" onClick={togglePasswordVisibility}>\n            {isPasswordVisible ? <AiFillEyeInvisible /> : <AiFillEye />}\n          </EyeBtn>\n        )}\n      </InputField>\n    </InputBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-inline: clamp(1rem, 0.3rem + 2vw, 2rem);\n  padding-block: clamp(1rem, 0.3rem + 2vw, 2rem);\n  border: 2px solid #d4ae7a;\n  border-radius: 30px;\n`;\n","import { FormBtn } from 'components/FormBtn/FormBtn';\nimport { FormInput } from 'components/FormInput/FormInput';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Form } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormInput name={'name'} type={'text'} required />\n      <FormInput name={'email'} type={'text'} required />\n      <FormInput name={'password'} type={'password'} required />\n      <FormBtn name=\"sign up\" />\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterImg from 'assets/images/RegisterImg.jpg';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: row-reverse;\n  overflow-y: auto;\n  @media screen and (max-width: 700px) {\n    display: block;\n  }\n`;\nconst ContentBlock = styled.div`\n  flex: 60%;\n  padding-inline: 20px;\n  background: linear-gradient(\n    90deg,\n    rgba(13, 16, 9, 1) 0%,\n    rgba(131, 96, 71, 1) 100%\n  );\n  color: #fff;\n  @media screen and (max-width: 1000px) {\n    flex: 50%;\n  }\n  @media screen and (max-width: 768px) {\n    height: 100vh;\n    &::before {\n      content: '';\n      background: url(${RegisterImg}) no-repeat bottom/cover;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      opacity: 0.5;\n      overflow: hidden;\n    }\n  }\n`;\nconst Content = styled.div`\n  width: 100%;\n  max-width: 500px;\n  padding-top: 80px;\n  padding-bottom: 20px;\n  margin: 0 auto;\n  opacity: 1;\n  text-align: center;\n  h2 {\n    font-size: clamp(1rem, 0.2rem + 4vw, 3rem);\n    margin-bottom: 20px;\n  }\n  p {\n    font-size: clamp(1rem, 0.5rem + 2vw, 2rem);\n    line-height: 1.3;\n    margin-bottom: 60px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: relative;\n    h2 {\n      font-size: 50px;\n    }\n    p {\n      font-size: 30px;\n      margin-bottom: 40px;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    position: relative;\n    h2 {\n      font-size: 34px;\n    }\n    p {\n      font-size: 24px;\n    }\n  }\n`;\nconst ImgBlock = styled.div`\n  flex: 40%;\n  overflow: hidden;\n  background: url(${RegisterImg}) no-repeat bottom/cover;\n  @media screen and (max-width: 1000px) {\n    flex: 50%;\n  }\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <Container>\n          <ImgBlock />\n          <ContentBlock>\n            <Content>\n              <h2>Create Your Phonebook Account</h2>\n              <p>\n                Join our Phonebook community and easily manage your contacts\n              </p>\n              <RegisterForm />\n            </Content>\n          </ContentBlock>\n        </Container>\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","FormBtn","_ref","name","_jsx","children","InputBlock","Input","_templateObject2","Label","_templateObject3","InputField","_templateObject4","EyeBtn","_templateObject5","FormInput","type","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","_jsxs","htmlFor","id","onClick","AiFillEyeInvisible","AiFillEye","Form","RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","register","elements","value","email","password","reset","autoComplete","required","Container","ContentBlock","RegisterImg","Content","ImgBlock","Register","HelmetProvider","Helmet"],"sourceRoot":""}